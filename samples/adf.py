

"""
This file is part of pyemaps
___________________________

pyemaps is free software for non-comercial use: you can 
redistribute it and/or modify it under the terms of the GNU General 
Public License as published by the Free Software Foundation, either 
version 3 of the License, or (at your option) any later version.

pyemaps is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with pyemaps.  If not, see <https://www.gnu.org/licenses/>.

Contact supprort@emlabsoftware.com for any questions and comments.
___________________________

Author:     EMLab Solutions, Inc.
Date:       May 27, 2023  

This sample code is to demostrate basic usage of pyemaps' ediom
module (Electron Diffraction Indexing and Orientation Mapping)
to obtain anular dark field image from an experimental diffraction 
image input.

This script is for demonstration and only available in full pyemaps
package. 

Contact:
    support@emlabsoftware.com 
for price information.

"""
import os
from pathlib import Path
from pyemaps import StackImage, EM_INT

current_file = Path(os.path.abspath(__file__))
samples_path = current_file.parent.absolute()

def getADFFn():
    '''
    Imports sample experimental diffraction pattern image
    with preprietory 8-bytes header. 
    '''
    return os.path.join(samples_path, 'adftest30x30.im3')

def test_adf():
    '''
    Searches and indexes imported diffraction pattern images
    by theoretical diffraction patterns generated by pyemaps.
    '''
    
    adfn = getADFFn()
    img = StackImage(adfn,ndtype = EM_INT)
    # adfimgfn = getADFFn()
    img.generateADF(center = (256.0, 256.0), 
                    rads = (50.0,200.0), 
                    scol = 30,
                    bShow = True)

    # # release ediom module memory.
    # release_ediom()

if __name__ == '__main__':
    
    test_adf()
    