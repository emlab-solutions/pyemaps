name: Run Batch Script PyEMAPS Sanity Tests If there are changes

on:
  # schedule:
  #   - cron: '0 5 * * *' # Runs at midnight CDT (5:00 AM UTC)
  # workflow_dispatch: # Allow manual triggering as well
  push:
    branches: [ autotest_sz ]


jobs:
  run-tests:
    runs-on: windows-latest # Use a Windows runner for batch scripts

    steps:
      # Step 1: Checkout latest
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: autotest_sz                  # Replace with the branch name you want to use
          fetch-depth: 0                    # Fetch full history to compare commits
          
      # Step 1.1: Move the checked-out repository to a specific directory (e.g., sanity-nightly)
      - name: Move repository to a nightly testing directory
        shell: cmd
        run: |
          if exist sanity-nightly rmdir /s /q sanity-nightly
          mkdir sanity-nightly
          for %%f in (*) do if not "%%f"=="sanity-nightly" move "%%f" "sanity-nightly"

      # Step 2: Detect changes in the branch
      - name: Check for changes in the branch
        shell: bash
        id: changes
        run: |
          MONITORED_PATH="sanity-nightly/pyemaps/"
          LATEST_COMMIT=$(git rev-parse HEAD)
          LAST_COMMIT=$(cat .github/last_commit || echo "")

          if [ "$LATEST_COMMIT" != "$LAST_COMMIT" ] && git diff --quiet $LAST_COMMIT $LATEST_COMMIT -- $MONITORED_PATH; then
            echo $LATEST_COMMIT > .github/last_commit
          else
            run echo "No changes detected! Exiting wihtout testing"
            exit 0
          fi

          echo $LATEST_COMMIT > .github/last_commit


      # Step 3.1: Install Python and dependencies
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7  # Specify the Python version you need

      #Step 3.2: Install dependencies
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build requests

      # Step 3.2.1: Build the package using a batch file
      - name: List files in sanity-nightly\pyemaps
        shell: cmd
        run: |
          dir sanity-nightly\pyemaps
          if not exist sanity-nightly rmdir /s /q sanity-nightly
            echo Directory does not exist
          echo %CD%
          
      # Step 3.3: Build the package using a batch file
      - name: Build the package
        shell: cmd
        run: |
          sanity-nightly\pyemaps\build.bat

      # Step 4: Navigate to the 'test' directory and run the batch script
      - name: Run batch script tests if there are changes
        shell: cmd
        run: |
          run: echo "Changes detected in the branch. Running tests."
          ./sanity-nightly/pyemaps/test/sanity/githut-sanity.bat > ./sanity-nightly/pyemaps/test/githubsanity_test_results.log 2>&1
      
      # Step 5: Annotate failures
      - name: Annotate test failures
        if: failure()  # Only run if the job fails
        run: |
          echo "::error file=./sanity-nightly/pyemaps/test/githubsanity_test_results.log,line=1::Test failure detected. Check the log for details."

      # Step 6: Upload logs for debugging
      - name: Upload test log
        if: always()  # Upload log regardless of job status
        uses: actions/upload-artifact@v3
        with:
          name: test-log
          path: ./sanity-nightly/pyemaps/test/test/sanity/sanity_test_results.log
