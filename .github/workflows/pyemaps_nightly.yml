name: Run Batch Script PyEMAPS Sanity Tests If there are changes

on:
  # schedule:
  #   - cron: '0 5 * * *' # Runs at midnight CDT (5:00 AM UTC)
  # workflow_dispatch: # Allow manual triggering as well
  push:
    branches: [ autotest_sz ]


jobs:
  run-tests:
    runs-on: windows-latest # Use a Windows runner for batch scripts

    steps:
      # Step 1: Checkout latest
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: autotest_sz                  # Replace with the branch name you want to use
          fetch-depth: 0                    # Fetch full history to compare commits
          
      # Step 2: Detect changes in the branch
      - name: Check for changes in the branch
        shell: bash
        id: changes
        run: |
          MONITORED_PATH="%CD%"
          LATEST_COMMIT=$(git rev-parse HEAD)
          # Check if .github/last_commit exists, if not, set LAST_COMMIT to empty string
          if [ -f ".github/last_commit" ]; then
              LAST_COMMIT=$(cat .github/last_commit)
          else
              LAST_COMMIT=""
          fi
          if [ "$LATEST_COMMIT" != "$LAST_COMMIT" ] && git diff --quiet $LAST_COMMIT $LATEST_COMMIT -- $MONITORED_PATH; then
            echo $LATEST_COMMIT > .github/last_commit
          else
            run echo "No changes detected! Exiting wihtout testing"
            exit 0
          fi

          echo $LATEST_COMMIT > .github/last_commit
      
      # Step 2: Install Visual Studio 2019 and Build Tools
      - name: Download Visual Studio 2019 and Build Tools
        run: |
          # Install Visual Studio 2019 with Build Tools and necessary workloads
          Invoke-WebRequest -Uri https://aka.ms/vs/16/release/vs_installer.exe -OutFile vs_installer.exe
          # Check if the installer exists
          if (Test-Path "vs_installer.exe") {
              Write-Host "vs_installer.exe found. Proceeding with installation."
              # Run the installer
              Start-Process -FilePath .\vs_installer.exe -ArgumentList '--quiet', '--wait', '--add', 'Microsoft.VisualStudio.Workload.NativeDesktop', '--add', 'Microsoft.VisualStudio.Workload.VCTools', '--includeRecommended' -NoNewWindow -Wait
          } else {
              Write-Host "vs_installer.exe not found. Exiting..."
              exit 1
          }
        
      # Step 2.0: Install Visual Studio 2019 and Build Tools
      - name: Install Visual Studio 2019 and Build Tools
        shell: powershell
        run: |    
          Start-Process -FilePath .\vs_installer.exe -ArgumentList '--quiet', '--wait', '--add', 'Microsoft.VisualStudio.Workload.VCTools', '--includeRecommended' -NoNewWindow -Wait

      # Step 2.1: Set up Developer Command Prompt for Visual Studio
      - name: Set up Developer Command Prompt for Visual Studio
        run: |
          # Locate the Visual Studio installation using vswhere
          $VS_PATH = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath
          # Set up the Developer Command Prompt environment
          & "$VS_PATH\Common7\Tools\VsDevCmd.bat"
          
      # Step 4: Create a specific directory for the nightly sanity test results (e.g., sanity-nightly)
      - name: Create nightly testing directory
        shell: cmd
        run: |
          echo "current working directory is: " %CD%
          if exist sanity-nightly rmdir /s /q sanity-nightly
          mkdir sanity-nightly
            
      # Step 4.1: Install Python and dependencies
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7  # Specify the Python version you need

      #Step 4.2: Install dependencies
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build requests numpy
          
      # Step 4.3: Build the package using a batch file
      - name: Build the package
        shell: cmd
        run: |
          echo "Building pyEMAPS....."
          .\build.bat

      # Step 5: Navigate to the 'test' directory and run the batch script
      - name: Run batch script tests if there are changes
        shell: cmd
        run: |
          echo "Running sanity tests...."
          .\test\sanity\githut-sanity.bat > .\sanity-nightly\githubsanity_test_results.log 2>&1
      
      # Step 6: Annotate failures
      - name: Annotate test failures
        if: failure()  # Only run if the job fails
        run: |
          echo "::error file=.\sanity-nightly\githubsanity_test_results.log,line=1::Test failure detected. Check the log for details."

      # Step 7: Upload logs for debugging
      - name: Upload test log
        if: always()  # Upload log regardless of job status
        uses: actions/upload-artifact@v3
        with:
          name: test-log
          path: .\sanity-nightly\githubsanity_test_results.log
